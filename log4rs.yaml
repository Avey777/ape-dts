appenders:
  console_appender:
    kind: console
    encoder:
      kind: pattern
      pattern: "{h({d(%H:%M:%S)})} - {level} - {tid} - {m}{n}"

  default_file_appender:
    kind: rolling_file
    append: true
    path: "LOG_DIR_PLACEHODLER/default.log"
    encoder:
      pattern: "{h({d(%Y-%m-%d %H:%M:%S)})} - {level} - {tid} - {m}{n}"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 100mb
      roller:
        kind: fixed_window
        base: 1
        count: 10
        pattern: "LOG_DIR_PLACEHODLER/default{}.log"

  commit_file_appender:
    kind: rolling_file
    append: true
    path: "LOG_DIR_PLACEHODLER/commit.log"
    encoder:
      pattern: "{h({d(%Y-%m-%d %H:%M:%S)})} - {level} - {tid} - {m}{n}"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 100mb
      roller:
        kind: fixed_window
        base: 1
        count: 10
        pattern: "LOG_DIR_PLACEHODLER/commit{}.log"

  position_file_appender:
    kind: rolling_file
    append: true
    path: "LOG_DIR_PLACEHODLER/position.log"
    encoder:
      pattern: "{h({d(%Y-%m-%d %H:%M:%S)})} | {m}{n}"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 1mb
      roller:
        kind: fixed_window
        base: 1
        count: 10
        pattern: "LOG_DIR_PLACEHODLER/position{}.log"

loggers:
  default_file_logger:
    level: LOG_LEVEL_PLACEHODLER
    appenders: 
      - default_file_appender

  commit_file_logger:
    level: LOG_LEVEL_PLACEHODLER
    appenders: 
      - commit_file_appender

  position_file_logger:
    level: LOG_LEVEL_PLACEHODLER
    appenders: 
      - position_file_appender

root:
  level: LOG_LEVEL_PLACEHODLER
  appenders:
    # - console
    - default_file_appender